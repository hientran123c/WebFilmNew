@model Film_website.Models.HomePageViewModel
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Link to homepage-specific CSS -->
<link rel="stylesheet" href="~/css/homepage.css" asp-append-version="true" />

@if (User.Identity!.IsAuthenticated)
{
    <!-- Authenticated User Content - Show Movies -->
    <!-- Hero Section -->
    <div class="hero-section">
        <div class="hero-content">
            <div class="hero-navigation">
                <div class="nav-center">
                    <h1>Home page</h1>
                </div>
                <div class="nav-right">
                    <button class="nav-icon search-btn" title="Search">
                        <i class="fas fa-search"></i>
                    </button>
                    <button class="nav-icon notification-btn" title="Notifications">
                        <i class="fas fa-bell"></i>
                    </button>
                    <div class="score-indicator">@Model.TotalMoviesCount Movies</div>
                </div>
            </div>

            @if (Model.FeaturedMovie != null)
            {
                <div class="featured-movie">
                    <div class="featured-backdrop">
                        @if (!string.IsNullOrEmpty(Model.FeaturedMovie.ThumbnailPath))
                        {
                            <img src="@Model.FeaturedMovie.ThumbnailPath" alt="@Model.FeaturedMovie.Title" />
                        }
                        <div class="featured-overlay"></div>
                    </div>
                    <div class="featured-content">
                        <h2 class="featured-title">@Model.FeaturedMovie.Title</h2>
                        <p class="featured-description">@Model.FeaturedMovie.Description</p>
                        <div class="featured-meta">
                            <span class="genre-tag">@Model.FeaturedMovie.Genre</span>
                            <span class="year-tag">@Model.FeaturedMovie.ReleaseYear</span>
                            @if (!string.IsNullOrEmpty(Model.FeaturedMovie.Categories))
                            {
                                @foreach (var category in Model.FeaturedMovie.GetCategoriesList().Take(2))
                                {
                                    <span class="category-tag">@category</span>
                                }
                            }
                        </div>
                    </div>
                </div>
            }

            <div class="hero-actions">
                @if (Model.FeaturedMovie != null)
                {
                    <a href="@Url.Action("Details", "Movie", new { id = Model.FeaturedMovie.Id })" class="action-btn play-btn">
                        <i class="fas fa-play"></i>
                        Play
                    </a>
                    @if (!string.IsNullOrEmpty(Model.FeaturedMovie.FilePath))
                    {
                        <a href="@Model.FeaturedMovie.FilePath" class="action-btn trailer-btn" target="_blank">
                            <i class="fas fa-film"></i>
                            Watch trailer
                        </a>
                    }
                }
                else
                {
                    <a href="@Url.Action("Index", "Movie")" class="action-btn play-btn">
                        <i class="fas fa-film"></i>
                        Browse Movies
                    </a>
                }
            </div>
        </div>
    </div>

    <!-- Dynamic Category Sections -->
    @if (Model.AvailableCategories != null && Model.AvailableCategories.Any())
    {
        @foreach (var category in Model.AvailableCategories)
        {
            var moviesInCategory = Model.GetMoviesForCategory(category);
            if (moviesInCategory.Any())
            {
                <div class="movie-section">
                    <div class="section-header">
                        <h3 class="section-title">@Model.GetCategoryDisplayName(category)</h3>
                        <div class="section-controls">
                            <button class="control-btn prev-btn" data-category="@category">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <button class="control-btn next-btn" data-category="@category">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </div>
                    </div>
                    <div class="movie-grid" id="grid-@category.Replace(" ", "-").ToLower()">
                        @foreach (var movie in moviesInCategory)
                        {
                            <div class="movie-card" data-movie-id="@movie.Id">
                                <div class="movie-poster">
                                    @if (!string.IsNullOrEmpty(movie.ThumbnailPath))
                                    {
                                        <img src="@movie.ThumbnailPath" alt="@movie.Title" loading="lazy" />
                                    }
                                    else
                                    {
                                        <div class="placeholder-poster">
                                            <i class="fas fa-film"></i>
                                            <span>@movie.Title</span>
                                        </div>
                                    }
                                    <div class="play-overlay">
                                        <i class="fas fa-play"></i>
                                    </div>
                                    <div class="movie-overlay">
                                        <div class="movie-overlay-content">
                                            <h4>@movie.Title</h4>
                                            <p class="movie-genre">@movie.Genre</p>
                                            <p class="movie-year">@movie.ReleaseYear</p>
                                            @if (!string.IsNullOrEmpty(movie.Categories))
                                            {
                                                <div class="movie-categories">
                                                    @foreach (var movieCategory in movie.GetCategoriesList().Take(2))
                                                    {
                                                        <span class="mini-category-tag">@movieCategory</span>
                                                    }
                                                </div>
                                            }
                                            <a href="@Url.Action("Details", "Movie", new { id = movie.Id })" class="watch-btn">
                                                <i class="fas fa-play"></i> Watch Now
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="movie-info">
                                    <h4>@movie.Title</h4>
                                    <p>@movie.Genre • @movie.ReleaseYear</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    }
    else
    {
        <!-- No categorized movies available -->
        <div class="no-content-section">
            <div class="no-content-container">
                <i class="fas fa-film no-content-icon"></i>
                <h3>No movies available yet</h3>
                <p>Movies will appear here once they are added with categories.</p>
                @if (User.IsInRole("Admin"))
                {
                    <a href="@Url.Action("AddMovie", "Admin")" class="action-btn">
                        <i class="fas fa-plus"></i> Add Movies
                    </a>
                }
            </div>
        </div>
    }
}
else
{
    <!-- Non-Authenticated User Content - Welcome Message -->
    <div class="welcome-section">
        <div class="welcome-container">
            <div class="welcome-content">
                <div class="welcome-hero">
                    <i class="fas fa-film welcome-icon"></i>
                    <h1 class="welcome-title">Welcome to Film Website</h1>
                    <p class="welcome-subtitle">Please login or register to watch the movie.</p>
                </div>

                <div class="welcome-actions">
                    <a href="@Url.Action("Login", "Account")" class="welcome-btn btn-login">
                        <i class="fas fa-sign-in-alt"></i>
                        Login
                    </a>
                    <a href="@Url.Action("Register", "Account")" class="welcome-btn btn-register">
                        <i class="fas fa-user-plus"></i>
                        Register
                    </a>
                </div>

                <div class="welcome-features">
                    <div class="feature-item">
                        <i class="fas fa-play-circle"></i>
                        <span>Watch High Quality Movies</span>
                    </div>
                    <div class="feature-item">
                        <i class="fas fa-download"></i>
                        <span>Download for Offline Viewing</span>
                    </div>
                    <div class="feature-item">
                        <i class="fas fa-users"></i>
                        <span>Join Our Community</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Only run movie-related scripts if user is authenticated
        @if (User.Identity!.IsAuthenticated)
        {
                <text>
                // Movie card interactions
                const movieCards = document.querySelectorAll('.movie-card');
                movieCards.forEach(card => {
                    card.addEventListener('click', function(e) {
                        if (!e.target.closest('.play-overlay')) {
                            const movieId = this.getAttribute('data-movie-id');
                            window.location.href = `@Url.Action("Details", "Movie")?id=${movieId}`;
                        }
                    });
                });

                // Search functionality
                const searchBtn = document.querySelector('.search-btn');
                if (searchBtn) {
                    searchBtn.addEventListener('click', function() {
                        // You can implement search modal or redirect to search page
                        window.location.href = '@Url.Action("Index", "Movie")';
                    });
                }

                // Notification functionality
                const notificationBtn = document.querySelector('.notification-btn');
                if (notificationBtn) {
                    notificationBtn.addEventListener('click', function() {
                        // Implement notifications (show dropdown, modal, etc.)
                        alert('Notifications feature coming soon!');
                    });
                }

                // Trending controls
                const prevBtn = document.querySelector('.prev-btn');
                const nextBtn = document.querySelector('.next-btn');

                if (prevBtn) {
                    prevBtn.addEventListener('click', function() {
                        // Implement previous functionality
                        console.log('Previous trending content');
                    });
                }

                if (nextBtn) {
                    nextBtn.addEventListener('click', function() {
                        // Implement next functionality
                        console.log('Next trending content');
                    });
                }
                </text>
        }
        else
        {
                <text>
                // Welcome section animations
                const welcomeIcon = document.querySelector('.welcome-icon');
                const featureItems = document.querySelectorAll('.feature-item');

                // Add staggered animation to feature items
                featureItems.forEach((item, index) => {
                    item.style.opacity = '0';
                    item.style.transform = 'translateY(20px)';
                    setTimeout(() => {
                        item.style.transition = 'all 0.6s ease';
                        item.style.opacity = '1';
                        item.style.transform = 'translateY(0)';
                    }, 500 + (index * 200));
                });
                </text>
        }
    });
</script>