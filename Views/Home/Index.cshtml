@model Film_website.Models.HomePageViewModel
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Link to homepage-specific CSS -->
<link rel="stylesheet" href="~/css/homepage.css" asp-append-version="true" />

@if (User.Identity!.IsAuthenticated)
{
    <!-- Authenticated User Content - Show Movies -->
    <!-- Hero Section -->
    <div class="hero-section">
        <div class="hero-content">
            <div class="hero-navigation">
                <div class="nav-center">
                    <h1>Home page</h1>
                </div>
                <div class="nav-right">
                    <button class="nav-icon search-btn" title="Search">
                        <i class="fas fa-search"></i>
                    </button>
                    <button class="nav-icon notification-btn" title="Notifications">
                        <i class="fas fa-bell"></i>
                    </button>
                    <div class="score-indicator">@Model.TotalMoviesCount Movies</div>
                </div>
            </div>

            <!-- Enhanced Poster-Only Slideshow -->
            <div class="poster-slideshow" id="posterSlideshow">
                @if (Model.FeaturedMovie != null)
                {
                    <!-- Create array of all movies for slideshow -->
                    var allMovies = new List<Film_website.Models.Movie> { Model.FeaturedMovie };
                    if (Model.AvailableCategories != null)
                    {
                        foreach (var category in Model.AvailableCategories)
                        {
                            var categoryMovies = Model.GetMoviesForCategory(category);
                            allMovies.AddRange(categoryMovies.Where(m => m.Id != Model.FeaturedMovie.Id).Take(4));
                        }
                    }

                    @for (int i = 0; i < Math.Min(allMovies.Count, 5); i++)
                    {
                        var movie = allMovies[i];
                        <div class="poster-slide @(i == 0 ? "active" : "")" data-movie-id="@movie.Id" data-movie-title="@movie.Title">
                            <div class="poster-backdrop">
                                @if (!string.IsNullOrEmpty(movie.ThumbnailPath))
                                {
                                    <img src="@movie.ThumbnailPath" alt="@movie.Title" />
                                }
                                else
                                {
                                    <div class="poster-placeholder">
                                        <i class="fas fa-film"></i>
                                        <span>@movie.Title</span>
                                    </div>
                                }
                                <!-- Subtle overlay for better readability of controls -->
                                <div class="poster-overlay"></div>
                            </div>

                            <!-- Movie info tooltip (appears on hover) -->
                            <div class="movie-tooltip">
                                <h3>@movie.Title</h3>
                                <p>@movie.Genre • @movie.ReleaseYear</p>
                                <div class="tooltip-actions">
                                    <a href="@Url.Action("Details", "Movie", new { id = movie.Id })" class="tooltip-btn">
                                        <i class="fas fa-play"></i> Watch
                                    </a>
                                    @if (!string.IsNullOrEmpty(movie.FilePath))
                                    {
                                        <a href="@movie.FilePath" class="tooltip-btn trailer-btn" target="_blank">
                                            <i class="fas fa-film"></i> Trailer
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Slideshow Controls -->
                    <div class="slideshow-controls">
                        <button class="slide-control prev-slide" id="prevSlide">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <button class="slide-control next-slide" id="nextSlide">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>

                    <!-- Slideshow Indicators -->
                    <div class="slide-indicators">
                        @for (int i = 0; i < Math.Min(allMovies.Count, 5); i++)
                        {
                            <button class="slide-indicator @(i == 0 ? "active" : "")" data-slide="@i"></button>
                        }
                    </div>

                    <!-- Current Movie Title Display -->
                    <div class="current-movie-title">
                        <h2 id="currentMovieTitle">@Model.FeaturedMovie.Title</h2>
                    </div>
                }
                else
                {
                    <!-- Fallback when no featured movie -->
                    <div class="poster-slide active">
                        <div class="poster-backdrop">
                            <div class="no-poster-content">
                                <i class="fas fa-film no-poster-icon"></i>
                                <h2>No Featured Movie</h2>
                                <p>Browse our movie collection</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Dynamic Category Sections -->
    @if (Model.AvailableCategories != null && Model.AvailableCategories.Any())
    {
        @foreach (var category in Model.AvailableCategories)
        {
            var moviesInCategory = Model.GetMoviesForCategory(category);
            if (moviesInCategory.Any())
            {
                <div class="movie-section">
                    <div class="section-header">
                        <h3 class="section-title">@Model.GetCategoryDisplayName(category)</h3>
                        <div class="section-controls">
                            <button class="control-btn prev-btn" data-category="@category">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <button class="control-btn next-btn" data-category="@category">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </div>
                    </div>
                    <div class="movie-grid" id="grid-@category.Replace(" ", "-").ToLower()">
                        @foreach (var movie in moviesInCategory)
                        {
                            <div class="movie-card" data-movie-id="@movie.Id">
                                <div class="movie-poster">
                                    @if (!string.IsNullOrEmpty(movie.ThumbnailPath))
                                    {
                                        <img src="@movie.ThumbnailPath" alt="@movie.Title" loading="lazy" />
                                    }
                                    else
                                    {
                                        <div class="placeholder-poster">
                                            <i class="fas fa-film"></i>
                                            <span>@movie.Title</span>
                                        </div>
                                    }
                                    <div class="play-overlay">
                                        <i class="fas fa-play"></i>
                                    </div>
                                    <div class="movie-overlay">
                                        <div class="movie-overlay-content">
                                            <h4>@movie.Title</h4>
                                            <p class="movie-genre">@movie.Genre</p>
                                            <p class="movie-year">@movie.ReleaseYear</p>
                                            @if (!string.IsNullOrEmpty(movie.Categories))
                                            {
                                                <div class="movie-categories">
                                                    @foreach (var movieCategory in movie.GetCategoriesList().Take(2))
                                                    {
                                                        <span class="mini-category-tag">@movieCategory</span>
                                                    }
                                                </div>
                                            }
                                            <a href="@Url.Action("Details", "Movie", new { id = movie.Id })" class="watch-btn">
                                                <i class="fas fa-play"></i> Watch Now
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="movie-info">
                                    <h4>@movie.Title</h4>
                                    <p>@movie.Genre • @movie.ReleaseYear</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    }
    else
    {
        <!-- No categorized movies available -->
        <div class="no-content-section">
            <div class="no-content-container">
                <i class="fas fa-film no-content-icon"></i>
                <h3>No movies available yet</h3>
                <p>Movies will appear here once they are added with categories.</p>
                @if (User.IsInRole("Admin"))
                {
                    <a href="@Url.Action("AddMovie", "Admin")" class="action-btn">
                        <i class="fas fa-plus"></i> Add Movies
                    </a>
                }
            </div>
        </div>
    }
}
else
{
    <!-- Non-Authenticated User Content - Welcome Message -->
    <div class="welcome-section">
        <div class="welcome-container">
            <div class="welcome-content">
                <div class="welcome-hero">
                    <i class="fas fa-film welcome-icon"></i>
                    <h1 class="welcome-title">Welcome to Film Website</h1>
                    <p class="welcome-subtitle">Please login or register to watch the movie.</p>
                </div>

                <div class="welcome-actions">
                    <a href="@Url.Action("Login", "Account")" class="welcome-btn btn-login">
                        <i class="fas fa-sign-in-alt"></i>
                        Login
                    </a>
                    <a href="@Url.Action("Register", "Account")" class="welcome-btn btn-register">
                        <i class="fas fa-user-plus"></i>
                        Register
                    </a>
                </div>

                <div class="welcome-features">
                    <div class="feature-item">
                        <i class="fas fa-play-circle"></i>
                        <span>Watch High Quality Movies</span>
                    </div>
                    <div class="feature-item">
                        <i class="fas fa-download"></i>
                        <span>Download for Offline Viewing</span>
                    </div>
                    <div class="feature-item">
                        <i class="fas fa-users"></i>
                        <span>Join Our Community</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<style>
    /* Film Website Homepage - Red & Black Theme with Poster-Only Slideshow */

    /* Global Variables */
    :root {
        --primary-red: #e50914;
        --dark-red: #b20710;
        --light-red: #ff1825;
        --primary-black: #000000;
        --dark-black: #0a0a0a;
        --light-black: #141414;
        --accent-red: #ff4757;
        --text-white: #ffffff;
        --text-gray: #b3b3b3;
        --overlay-black: rgba(0, 0, 0, 0.7);
        --overlay-red: rgba(229, 9, 20, 0.8);
        --gradient-red: linear-gradient(135deg, var(--primary-red), var(--dark-red));
        --gradient-black: linear-gradient(135deg, var(--primary-black), var(--light-black));
    }

    /* Reset and Base Styles */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: var(--primary-black);
        color: var(--text-white);
        line-height: 1.6;
        overflow-x: hidden;
    }

    /* Hero Section */
    .hero-section {
        position: relative;
        min-height: 100vh;
        background: var(--gradient-black);
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at 50% 50%, var(--primary-red) 0%, transparent 70%);
            opacity: 0.1;
            z-index: 1;
        }

    .hero-content {
        position: relative;
        z-index: 2;
        width: 100%;
        max-width: 1200px;
        padding: 0 20px;
    }

    /* Hero Navigation */
    .hero-navigation {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px 0;
        margin-bottom: 40px;
        background: rgba(0, 0, 0, 0.5);
        border-radius: 15px;
        padding: 20px 30px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(229, 9, 20, 0.3);
    }

    .nav-center h1 {
        font-size: 2.5rem;
        font-weight: 700;
        background: var(--gradient-red);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-shadow: 0 0 20px rgba(229, 9, 20, 0.5);
    }

    .nav-right {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .nav-icon {
        background: transparent;
        border: 2px solid var(--primary-red);
        color: var(--text-white);
        padding: 12px;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1.2rem;
    }

        .nav-icon:hover {
            background: var(--primary-red);
            transform: scale(1.1);
            box-shadow: 0 0 20px rgba(229, 9, 20, 0.6);
        }

    .score-indicator {
        background: var(--gradient-red);
        padding: 10px 20px;
        border-radius: 25px;
        font-weight: 600;
        box-shadow: 0 4px 15px rgba(229, 9, 20, 0.4);
    }

    /* Enhanced Poster-Only Slideshow */
    .poster-slideshow {
        position: relative;
        height: 600px;
        border-radius: 20px;
        overflow: hidden;
        margin-bottom: 30px;
        box-shadow: 0 15px 50px rgba(0, 0, 0, 0.9);
        transition: transform 0.3s ease;
        cursor: pointer;
    }

        .poster-slideshow:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.9);
        }

    .poster-slide {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        opacity: 0;
        transition: all 0.6s ease-in-out;
        transform: translateX(100%);
        z-index: 1;
    }

        .poster-slide.active {
            opacity: 1;
            transform: translateX(0);
            z-index: 2;
        }

        .poster-slide.prev {
            opacity: 0;
            transform: translateX(-100%);
            z-index: 1;
        }

        .poster-slide.next {
            opacity: 0;
            transform: translateX(100%);
            z-index: 1;
        }

    .poster-backdrop {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 1;
    }

        .poster-backdrop img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.4s ease;
        }

    .poster-slideshow:hover .poster-backdrop img {
        transform: scale(1.02);
    }

    .poster-placeholder {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
        background: var(--gradient-black);
        color: var(--text-gray);
        text-align: center;
        padding: 40px;
    }

        .poster-placeholder i {
            font-size: 5rem;
            margin-bottom: 20px;
            color: var(--primary-red);
        }

        .poster-placeholder span {
            font-size: 2rem;
            font-weight: 600;
        }

    /* Subtle overlay for controls visibility */
    .poster-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient( to bottom, rgba(0, 0, 0, 0.1) 0%, transparent 30%, transparent 70%, rgba(0, 0, 0, 0.3) 100% );
        z-index: 2;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .poster-slideshow:hover .poster-overlay {
        opacity: 1;
    }

    /* Movie Tooltip (appears on hover) */
    .movie-tooltip {
        position: absolute;
        top: 20px;
        left: 20px;
        background: rgba(0, 0, 0, 0.9);
        padding: 20px;
        border-radius: 15px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(229, 9, 20, 0.3);
        max-width: 300px;
        z-index: 4;
        opacity: 0;
        transform: translateY(-10px);
        transition: all 0.3s ease;
        pointer-events: none;
    }

    .poster-slideshow:hover .movie-tooltip {
        opacity: 1;
        transform: translateY(0);
        pointer-events: auto;
    }

    .movie-tooltip h3 {
        font-size: 1.4rem;
        margin-bottom: 10px;
        color: var(--text-white);
    }

    .movie-tooltip p {
        color: var(--text-gray);
        margin-bottom: 15px;
    }

    .tooltip-actions {
        display: flex;
        gap: 10px;
    }

    .tooltip-btn {
        display: flex;
        align-items: center;
        gap: 5px;
        padding: 8px 15px;
        border-radius: 20px;
        text-decoration: none;
        font-size: 0.9rem;
        font-weight: 600;
        transition: all 0.3s ease;
        background: var(--gradient-red);
        color: var(--text-white);
    }

        .tooltip-btn:hover {
            background: var(--dark-red);
            transform: translateY(-2px);
        }

    .trailer-btn {
        background: transparent !important;
        border: 1px solid var(--primary-red);
    }

        .trailer-btn:hover {
            background: var(--primary-red) !important;
        }

    /* Current Movie Title Display */
    .current-movie-title {
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 4;
        text-align: center;
        background: rgba(0, 0, 0, 0.7);
        padding: 15px 30px;
        border-radius: 25px;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(229, 9, 20, 0.3);
        transition: all 0.3s ease;
    }

        .current-movie-title h2 {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--text-white);
            margin: 0;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
        }

    /* Slideshow Controls */
    .slideshow-controls {
        position: absolute;
        top: 50%;
        left: 20px;
        right: 20px;
        transform: translateY(-50%);
        display: flex;
        justify-content: space-between;
        z-index: 4;
        pointer-events: none;
    }

    .slide-control {
        background: rgba(0, 0, 0, 0.8);
        border: 2px solid var(--primary-red);
        color: var(--text-white);
        padding: 15px 18px;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1.2rem;
        backdrop-filter: blur(10px);
        opacity: 0;
        transform: scale(0.8);
        pointer-events: auto;
    }

    .poster-slideshow:hover .slide-control {
        opacity: 1;
        transform: scale(1);
    }

    .slide-control:hover {
        background: var(--primary-red);
        transform: scale(1.1);
        box-shadow: 0 0 20px rgba(229, 9, 20, 0.6);
    }

    /* Slide Indicators */
    .slide-indicators {
        position: absolute;
        bottom: 80px;
        right: 40px;
        display: flex;
        gap: 10px;
        z-index: 4;
    }

    .slide-indicator {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: 2px solid var(--text-white);
        background: transparent;
        cursor: pointer;
        transition: all 0.3s ease;
        opacity: 0.6;
    }

        .slide-indicator.active {
            background: var(--primary-red);
            border-color: var(--primary-red);
            opacity: 1;
            transform: scale(1.2);
        }

        .slide-indicator:hover {
            opacity: 1;
            transform: scale(1.1);
        }

    /* No Poster Content */
    .no-poster-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
        text-align: center;
        color: var(--text-gray);
    }

    .no-poster-icon {
        font-size: 5rem;
        color: var(--primary-red);
        margin-bottom: 20px;
    }

    /* Movie Sections */
    .movie-section {
        padding: 40px 20px;
        max-width: 1200px;
        margin: 0 auto;
        position: relative;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        position: relative;
    }

    .section-title {
        font-size: 2rem;
        font-weight: 700;
        color: var(--text-white);
        position: relative;
        display: flex;
        align-items: center;
        gap: 15px;
    }

        .section-title::before {
            content: '';
            width: 5px;
            height: 30px;
            background: var(--gradient-red);
            border-radius: 3px;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 20px;
            width: 60px;
            height: 3px;
            background: var(--gradient-red);
            border-radius: 2px;
        }

    .section-controls {
        display: flex;
        gap: 10px;
        z-index: 10;
    }

    .control-btn {
        background: rgba(0, 0, 0, 0.7);
        border: 2px solid var(--primary-red);
        color: var(--text-white);
        padding: 12px 16px;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 50px;
        height: 50px;
        backdrop-filter: blur(5px);
    }

        .control-btn:hover {
            background: var(--primary-red);
            transform: scale(1.1);
            box-shadow: 0 0 15px rgba(229, 9, 20, 0.5);
        }

        .control-btn:active {
            transform: scale(0.95);
        }

    /* Movie Grid */
    .movie-grid {
        display: flex;
        gap: 20px;
        padding: 10px 0;
        overflow-x: auto;
        overflow-y: hidden;
        scroll-behavior: smooth;
        scrollbar-width: none;
        -ms-overflow-style: none;
        position: relative;
        min-height: 400px;
    }

        .movie-grid::-webkit-scrollbar {
            display: none;
        }

    .movie-card {
        position: relative;
        cursor: pointer;
        transition: all 0.3s ease;
        border-radius: 15px;
        overflow: hidden;
        background: var(--light-black);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
        flex-shrink: 0;
        width: 200px;
        height: 350px;
    }

        .movie-card:hover {
            transform: scale(1.05);
            z-index: 10;
        }

    .movie-poster {
        position: relative;
        height: 280px;
        overflow: hidden;
    }

        .movie-poster img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

    .movie-card:hover .movie-poster img {
        transform: scale(1.1);
    }

    .placeholder-poster {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
        background: var(--gradient-black);
        color: var(--text-gray);
        text-align: center;
        padding: 20px;
    }

        .placeholder-poster i {
            font-size: 3rem;
            margin-bottom: 10px;
            color: var(--primary-red);
        }

    .play-overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(229, 9, 20, 0.9);
        color: var(--text-white);
        padding: 15px;
        border-radius: 50%;
        font-size: 1.5rem;
        opacity: 0;
        transition: all 0.3s ease;
        z-index: 3;
    }

    .movie-card:hover .play-overlay {
        opacity: 1;
    }

    .movie-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient( to top, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, 0.7) 50%, transparent 100% );
        opacity: 0;
        transition: all 0.3s ease;
        z-index: 2;
    }

    .movie-card:hover .movie-overlay {
        opacity: 1;
    }

    .movie-overlay-content {
        position: absolute;
        bottom: 20px;
        left: 20px;
        right: 20px;
        transform: translateY(20px);
        transition: all 0.3s ease;
    }

    .movie-card:hover .movie-overlay-content {
        transform: translateY(0);
    }

    .movie-overlay-content h4 {
        font-size: 1.2rem;
        margin-bottom: 10px;
        color: var(--text-white);
    }

    .movie-genre,
    .movie-year {
        font-size: 0.9rem;
        color: var(--text-gray);
        margin-bottom: 5px;
    }

    .movie-categories {
        display: flex;
        gap: 5px;
        margin-bottom: 15px;
        flex-wrap: wrap;
    }

    .mini-category-tag {
        background: var(--primary-red);
        padding: 2px 8px;
        border-radius: 10px;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .watch-btn {
        display: inline-flex;
        align-items: center;
        gap: 5px;
        background: var(--gradient-red);
        color: var(--text-white);
        padding: 8px 15px;
        border-radius: 20px;
        text-decoration: none;
        font-size: 0.9rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .watch-btn:hover {
            background: var(--dark-red);
            transform: translateY(-2px);
        }

    .movie-info {
        padding: 10px 15px;
        height: 70px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

        .movie-info h4 {
            font-size: 1rem;
            margin-bottom: 5px;
            color: var(--text-white);
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .movie-info p {
            color: var(--text-gray);
            font-size: 0.8rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

    /* Welcome Section (Non-authenticated users) */
    .welcome-section {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--gradient-black);
        position: relative;
    }

        .welcome-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at 30% 70%, var(--primary-red) 0%, transparent 50%);
            opacity: 0.1;
        }

    .welcome-container {
        max-width: 600px;
        text-align: center;
        padding: 40px;
        position: relative;
        z-index: 2;
    }

    .welcome-hero {
        margin-bottom: 40px;
    }

    .welcome-icon {
        font-size: 5rem;
        color: var(--primary-red);
        margin-bottom: 20px;
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0%, 100%

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.05);
    }

    }

    .welcome-title {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 20px;
        background: var(--gradient-red);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .welcome-subtitle {
        font-size: 1.3rem;
        color: var(--text-gray);
        line-height: 1.5;
    }

    .welcome-actions {
        display: flex;
        gap: 20px;
        justify-content: center;
        margin-bottom: 50px;
    }

    .welcome-btn {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 15px 25px;
        border-radius: 30px;
        text-decoration: none;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    }

    .btn-login {
        background: var(--gradient-red);
        color: var(--text-white);
    }

        .btn-login:hover {
            background: var(--dark-red);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(229, 9, 20, 0.6);
        }

    .btn-register {
        background: transparent;
        color: var(--text-white);
        border: 2px solid var(--primary-red);
    }

        .btn-register:hover {
            background: var(--primary-red);
            transform: translateY(-2px);
        }

    .welcome-features {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 30px;
    }

    .feature-item {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 20px;
        background: rgba(229, 9, 20, 0.1);
        border-radius: 15px;
        border: 1px solid rgba(229, 9, 20, 0.3);
        transition: all 0.3s ease;
    }

        .feature-item:hover {
            background: rgba(229, 9, 20, 0.2);
            transform: translateY(-3px);
        }

        .feature-item i {
            font-size: 2rem;
            color: var(--primary-red);
        }

        .feature-item span {
            color: var(--text-white);
            font-weight: 500;
        }

    /* No Content Section */
    .no-content-section {
        min-height: 60vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 40px 20px;
    }

    .no-content-container {
        text-align: center;
        max-width: 500px;
    }

    .no-content-icon {
        font-size: 4rem;
        color: var(--primary-red);
        margin-bottom: 20px;
    }

    .no-content-container h3 {
        font-size: 2rem;
        margin-bottom: 15px;
        color: var(--text-white);
    }

    .no-content-container p {
        color: var(--text-gray);
        font-size: 1.1rem;
        margin-bottom: 30px;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .hero-navigation

    {
        flex-direction: column;
        gap: 20px;
    }

    .nav-center h1 {
        font-size: 2rem;
    }

    .poster-slideshow {
        height: 400px;
    }

    .current-movie-title h2 {
        font-size: 1.4rem;
    }

    .movie-tooltip {
        top: 10px;
        left: 10px;
        max-width: 250px;
        padding: 15px;
    }

    .movie-card {
        width: 150px;
        height: 280px;
    }

    .movie-poster {
        height: 220px;
    }

    .movie-info {
        height: 60px;
        padding: 8px 12px;
    }

    .welcome-actions {
        flex-direction: column;
        align-items: center;
    }

    .welcome-title {
        font-size: 2rem;
    }

    .welcome-features {
        grid-template-columns: 1fr;
    }

    .section-title {
        font-size: 1.5rem;
    }

    .control-btn {
        width: 40px;
        height: 40px;
        padding: 8px 10px;
        font-size: 0.9rem;
    }

    }

    @@media (max-width: 480px) {
        .hero-content

    {
        padding: 0 10px;
    }

    .poster-slideshow {
        height: 300px;
    }

    .current-movie-title {
        bottom: 10px;
        padding: 10px 20px;
    }

        .current-movie-title h2 {
            font-size: 1.2rem;
        }

    .movie-tooltip {
        top: 5px;
        left: 5px;
        max-width: 200px;
        padding: 10px;
    }

    .slide-indicators {
        bottom: 50px;
        right: 20px;
    }

    .movie-card {
        width: 120px;
        height: 220px;
    }

    .movie-poster {
        height: 170px;
    }

    .movie-info {
        height: 50px;
        padding: 6px 10px;
    }

        .movie-info h4 {
            font-size: 0.9rem;
        }

        .movie-info p {
            font-size: 0.7rem;
        }

    .section-title {
        font-size: 1.3rem;
    }

    .control-btn {
        width: 35px;
        height: 35px;
        padding: 6px 8px;
        font-size: 0.8rem;
    }

    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Enhanced Poster-Only Slideshow Functionality
        const slideshow = document.getElementById('posterSlideshow');
        if (slideshow) {
            const slides = slideshow.querySelectorAll('.poster-slide');
            const indicators = slideshow.querySelectorAll('.slide-indicator');
            const prevBtn = document.getElementById('prevSlide');
            const nextBtn = document.getElementById('nextSlide');
            const currentTitleDisplay = document.getElementById('currentMovieTitle');

            let currentSlide = 0;
            let isAutoPlaying = true;
            let autoPlayInterval;
            let hoverAutoPlayInterval;
            let isHovering = false;

            // Initialize slideshow
            function initSlideshow() {
                if (slides.length <= 1) return;

                startAutoPlay();
                setupEventListeners();
            }

            // Show specific slide with predictable left-to-right movement
            function showSlide(index, direction = 'next') {
                if (slides.length <= 1) return;

                // Remove all classes from all slides
                slides.forEach(slide => {
                    slide.classList.remove('active', 'prev', 'next');
                });
                indicators.forEach(indicator => {
                    indicator.classList.remove('active');
                });

                // Set the previous slide with appropriate direction
                if (currentSlide !== index) {
                    if (direction === 'next') {
                        slides[currentSlide].classList.add('prev');
                    } else {
                        slides[currentSlide].classList.add('next');
                    }
                }

                // Update current slide
                currentSlide = index;

                // Show current slide and indicator
                slides[currentSlide].classList.add('active');
                if (indicators[currentSlide]) {
                    indicators[currentSlide].classList.add('active');
                }

                // Update title display
                const movieTitle = slides[currentSlide].getAttribute('data-movie-title');
                if (currentTitleDisplay && movieTitle) {
                    currentTitleDisplay.textContent = movieTitle;
                }
            }

            // Next slide (left to right)
            function nextSlide() {
                const next = (currentSlide + 1) % slides.length;
                showSlide(next, 'next');
            }

            // Previous slide (right to left)
            function prevSlide() {
                const prev = (currentSlide - 1 + slides.length) % slides.length;
                showSlide(prev, 'prev');
            }

            // Auto play functionality
            function startAutoPlay() {
                if (slides.length <= 1) return;

                autoPlayInterval = setInterval(() => {
                    if (isAutoPlaying && !isHovering) {
                        nextSlide();
                    }
                }, 3500); // Consistent 3.5 second intervals
            }

            function stopAutoPlay() {
                clearInterval(autoPlayInterval);
                isAutoPlaying = false;
            }

            function resumeAutoPlay() {
                stopAutoPlay();
                isAutoPlaying = true;
                startAutoPlay();
            }

            // Hover auto-switching functionality (left to right)
            function startHoverAutoSwitch() {
                if (slides.length <= 1) return;

                hoverAutoPlayInterval = setInterval(() => {
                    if (isHovering) {
                        nextSlide(); // Move to next slide (left to right)
                    }
                }, 1200); // Consistent 1.2 second intervals on hover
            }

            function stopHoverAutoSwitch() {
                clearInterval(hoverAutoPlayInterval);
            }

            // Setup event listeners
            function setupEventListeners() {
                // Navigation buttons
                if (prevBtn) {
                    prevBtn.addEventListener('click', (e) => {
                        e.stopPropagation();
                        prevSlide();
                        stopAutoPlay();
                        setTimeout(resumeAutoPlay, 3000);
                    });
                }

                if (nextBtn) {
                    nextBtn.addEventListener('click', (e) => {
                        e.stopPropagation();
                        nextSlide();
                        stopAutoPlay();
                        setTimeout(resumeAutoPlay, 3000);
                    });
                }

                // Indicator buttons
                indicators.forEach((indicator, index) => {
                    indicator.addEventListener('click', (e) => {
                        e.stopPropagation();
                        const direction = index > currentSlide ? 'next' : 'prev';
                        showSlide(index, direction);
                        stopAutoPlay();
                        setTimeout(resumeAutoPlay, 3000);
                    });
                });

                // Enhanced hover effects - automatic switching
                slideshow.addEventListener('mouseenter', () => {
                    isHovering = true;
                    stopAutoPlay();

                    // Start automatic switching on hover after a brief delay
                    setTimeout(() => {
                        if (isHovering) {
                            startHoverAutoSwitch();
                        }
                    }, 800); // Wait 0.8 seconds before starting hover auto-switch
                });

                slideshow.addEventListener('mouseleave', () => {
                    isHovering = false;
                    stopHoverAutoSwitch();
                    resumeAutoPlay();
                });

                // Click on slideshow to go to movie details
                slideshow.addEventListener('click', (e) => {
                    // Don't navigate if clicking on controls
                    if (!e.target.closest('.slideshow-controls') &&
                        !e.target.closest('.slide-indicators') &&
                        !e.target.closest('.movie-tooltip')) {
                        const activeSlide = slideshow.querySelector('.poster-slide.active');
                        if (activeSlide) {
                            const movieId = activeSlide.getAttribute('data-movie-id');
                            if (movieId) {
                                window.location.href = `@Url.Action("Details", "Movie")?id=${movieId}`;
                            }
                        }
                    }
                });

                // Touch/swipe support for mobile
                let touchStartX = 0;
                let touchEndX = 0;

                slideshow.addEventListener('touchstart', (e) => {
                    touchStartX = e.changedTouches[0].screenX;
                    isHovering = true;
                    stopAutoPlay();
                    stopHoverAutoSwitch();
                });

                slideshow.addEventListener('touchend', (e) => {
                    touchEndX = e.changedTouches[0].screenX;
                    handleSwipe();
                    isHovering = false;
                    setTimeout(resumeAutoPlay, 2000);
                });

                function handleSwipe() {
                    const swipeThreshold = 50;
                    const swipeDistance = touchEndX - touchStartX;

                    if (Math.abs(swipeDistance) > swipeThreshold) {
                        if (swipeDistance > 0) {
                            prevSlide(); // Swipe right - previous slide
                        } else {
                            nextSlide(); // Swipe left - next slide
                        }
                    }
                }

                // Keyboard navigation
                document.addEventListener('keydown', (e) => {
                    if (document.activeElement === slideshow || slideshow.contains(document.activeElement)) {
                        switch(e.key) {
                            case 'ArrowLeft':
                                e.preventDefault();
                                prevSlide();
                                stopAutoPlay();
                                setTimeout(resumeAutoPlay, 3000);
                                break;
                            case 'ArrowRight':
                                e.preventDefault();
                                nextSlide();
                                stopAutoPlay();
                                setTimeout(resumeAutoPlay, 3000);
                                break;
                            case 'Enter':
                            case ' ':
                                e.preventDefault();
                                // Navigate to movie details
                                const activeSlide = slideshow.querySelector('.poster-slide.active');
                                if (activeSlide) {
                                    const movieId = activeSlide.getAttribute('data-movie-id');
                                    if (movieId) {
                                        window.location.href = `@Url.Action("Details", "Movie")?id=${movieId}`;
                                    }
                                }
                                break;
                        }
                    }
                });
            }

            // Initialize
            initSlideshow();
        }

        // Horizontal Movie Scroll Functionality (existing code)
        const prevBtns = document.querySelectorAll('.prev-btn');
        const nextBtns = document.querySelectorAll('.next-btn');
        const scrollAmount = 220;

        prevBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const category = this.getAttribute('data-category');
                const gridId = 'grid-' + category.replace(/\s+/g, '-').toLowerCase();
                const movieGrid = document.getElementById(gridId);

                if (movieGrid) {
                    movieGrid.scrollBy({
                        left: -scrollAmount,
                        behavior: 'smooth'
                    });

                    this.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        this.style.transform = 'scale(1)';
                    }, 150);
                }
            });
        });

        nextBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const category = this.getAttribute('data-category');
                const gridId = 'grid-' + category.replace(/\s+/g, '-').toLowerCase();
                const movieGrid = document.getElementById(gridId);

                if (movieGrid) {
                    movieGrid.scrollBy({
                        left: scrollAmount,
                        behavior: 'smooth'
                    });

                    this.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        this.style.transform = 'scale(1)';
                    }, 150);
                }
            });
        });

        // Additional functionality for authenticated users
    @if (User.Identity!.IsAuthenticated)
    {
        <text>
                // Movie card interactions
                const movieCards = document.querySelectorAll('.movie-card');
                movieCards.forEach(card => {
                    card.addEventListener('click', function(e) {
                        if (!e.target.closest('.play-overlay')) {
                            const movieId = this.getAttribute('data-movie-id');
                            window.location.href = `@Url.Action("Details", "Movie")?id=${movieId}`;
                        }
                    });
                });

                // Search functionality
                const searchBtn = document.querySelector('.search-btn');
                if (searchBtn) {
                    searchBtn.addEventListener('click', function() {
                        window.location.href = '@Url.Action("Index", "Movie")';
                    });
                }

                // Notification functionality
                const notificationBtn = document.querySelector('.notification-btn');
                if (notificationBtn) {
                    notificationBtn.addEventListener('click', function() {
                        alert('Notifications feature coming soon!');
                    });
                }
        </text>
    }
    else
    {
        <text>
                // Welcome section animations
                const welcomeIcon = document.querySelector('.welcome-icon');
                const featureItems = document.querySelectorAll('.feature-item');

                featureItems.forEach((item, index) => {
                    item.style.opacity = '0';
                    item.style.transform = 'translateY(20px)';
                    setTimeout(() => {
                        item.style.transition = 'all 0.6s ease';
                        item.style.opacity = '1';
                        item.style.transform = 'translateY(0)';
                    }, 500 + (index * 200));
                });
        </text>
    }
    });
</script>